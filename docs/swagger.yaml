basePath: /api/v1
definitions:
  model.User:
    properties:
      id:
        type: integer
      password:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Gin Swagger Example API
  version: "2.0"
paths:
  /users:
    get:
      consumes:
      - '*/*'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
      security:
      - BearerAuth: []
      summary: Get all users.
      tags:
      - users
    post:
      consumes:
      - application/json
      parameters:
      - description: Add user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.User'
      security:
      - BearerAuth: []
      summary: Add an user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: ""
      security:
      - BearerAuth: []
      summary: Delete an user
      tags:
      - users
    get:
      consumes:
      - '*/*'
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      security:
      - BearerAuth: []
      summary: Find User by id.
      tags:
      - users
schemes:
- http
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
